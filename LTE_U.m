function [WiFi,LTE,UE ] = LTE_U(  Loop,WiFi_type ,WiFi_num,LTE_type ,LTE_num, Channel_num, UE_num ,View)
% LTE_U 主函数
% Loop 总的时间片数量，以 15us 为一个最小时间单位
% WiFi_num WiFi 节点的个数
% LTE_num LTE 节点的个数

% 全局变量
WiFi_Energy = 24;
LTE_Energy = 30;
WiFi_Rate = 54*10^6;
deta_Time =8;
% 绘图和主循环时间间隔
View_deta = 5;
Loop_slip = 0.0001;

% WiFi 和 LTE 结构体定义

WiFi = struct ( ...
	'point',[0,0], ...
	'distance', 0, ...
	'energy', WiFi_Energy, ...
	'id', num2cell(1:WiFi_num), ...
    'UE_id',0, ...
    'Channel_id',1, ...
	'listen_enable', false, ...
	'send_enable', false, ...
    'total_date', [0 0 0], ...
    'total_input',[0 0 0],...
    'packet_length', 0, ...
    'packet_bit', 0 ,...
	'noise', 0, ...
    'LBT_enable', true , ...
    'WiFi_LTE',true, ...
    'CCA',0,...
    'detaT',0.0, ...
	'waitQueue', [] ...
	);

LTE = struct(...
	'point', [0,0], ...
	'distance', 0, ...
	'energy', LTE_Energy, ...
	'id', num2cell(1:LTE_num), ...
    'UE_id',0, ...
    'Channel_id',2, ...
	'listen_enable', false , ...
	'send_enable', false , ...
    'total_date' ,[0 0 0], ...
    'total_input',[0 0 0],...
    'packet_length', 0, ...
    'packet_bit',0,...
	'noise', 0 , ...
    'LBT_enable', true ,...
    'WiFi_LTE',false,...
    'CCA',0,...
    'detaT',0.0,...
	'waitQueue', [] ... 
	);
% 定义信道结构体
Channel = struct(...
    'busy_check',false, ...
    'id', num2cell(1:Channel_num) ,...
    'frequency',0.0, ...
    'sendQueue', [] , ...
    'crashQueue', [] ... 
    );
% 定义 UE 结构体
UE = struct(...
    'id',num2cell(1:UE_num),...
    'point', [0,0], ...
    'sender_id',[],...
    'energy_received', 0.0 , ...
    'packetlength_receiver',0 ...
    );
% 初始化 WiFi 和 LTE 节点结构体数组
% function [Struct] = Set_Point(Struct, centerPoint ,area,start_id)
WiFi_leftupPoint.x = 0.0;
WiFi_leftupPoint.y = 0.0;
LTE_leftupPoint.x = 10.0;
LTE_leftupPoint.y = 10.0;
UE_centerPoint.x = 5.0;
UE_centerPoint.y = 5.0;
UE_area.width = 4.0;
UE_area.length = 4.0;
WiFi_area.divx = 20;
WiFi_area.divy = 20;
LTE_area.divx = 20;
LTE_area.divy = 20;
% 进行格状撒点
[WiFi] = Set_Grid_Point(WiFi,WiFi_area,WiFi_leftupPoint,0,WiFi_type);
[LTE] = Set_Grid_Point(LTE,LTE_area,LTE_leftupPoint,length(WiFi),LTE_type);
[UE] = Set_Rnd_Point(UE, UE_centerPoint ,UE_area,0 );

% 初始化信道
[Channel] = Set_Channel(Channel);
% 连接发送端和接收端
UE_reciver = randperm(length(UE),2);
WiFi_reciver = zeros(1,length(WiFi));
WiFi_reciver(randperm(length(WiFi),1)) = UE_reciver(1);
LTE_reciver = zeros(1,length(LTE));
LTE_reciver(randperm(length(LTE),1)) = UE_reciver(2);
[UE,Channel,WiFi,LTE] = Dispatch_Stream(UE,Channel,WiFi,WiFi_reciver,LTE,LTE_reciver);
% Show_Point(0,WiFi,LTE,UE);
% 计算路损
Path_Loss = Pathloss(UE,Channel,WiFi,LTE);
% 设置业务数据包，选取监听节点
% Start figure
if View
    Screen = get(0,'ScreenSize');
    ScreenSize.width = Screen(3);
    ScreenSize.height = Screen(4);
    main_handler = figure('Color',[0,0.5,0.5],'Position',[ScreenSize.width/15,ScreenSize.height/15,ScreenSize.width*7/8,ScreenSize.height*7/8], ...
        'Name','LTE-U','NumberTitle','off','MenuBar','none'); 
    
    Node = [WiFi LTE];
    axes_Node_handler = axes('Parent',main_handler,'Position',[0.05,0.1,0.7,0.8]);
    axes_Loop_handler = axes('Parent',main_handler,'Position',[0.05,0.025,0.7,0.04]);
    axes_Channel_handler = axes('Parent',main_handler,'Position',[0.775,0.5,0.2,0.4]);
    
    ui_togglebutton_handler = uicontrol(main_handler,'Style','togglebutton','Units','normalized','String','Pause', ...
        'Position',[0.8,0.025,0.05,0.05],'BackgroundColor',[0,0.5,0.5],'Callback',@ui_toggle);
    ui_buttoncancel_handler = uicontrol(main_handler,'Style','pushbutton','Units','normalized','String','Exit', ...
        'Position',[0.9,0.025,0.05,0.05],'BackgroundColor',[0,0.5,0.5],'Callback',@ui_button);
    
    Node_bar_position = [1:length(Node)];
    Node_total_date = [];
    for i=1:length(Node)
        Node_total_date(i) = Node(1,i).total_date(1)*10^9 + Node(1,i).total_date(2)*10^7 + Node(1,i).total_date(3);
    end
    % Node_total_date  显示单位为 Kbit 故乘以 10^(-3)
    Node_bar_group = [Node_total_date*10^(-3) ; Node.detaT;Node.CCA;Node.send_enable;Node.LBT_enable];
    Node_bar_group =Node_bar_group';
    Node_bar_handler = bar(axes_Node_handler,Node_bar_position,Node_bar_group,'EraseMode','xor');
    Node_legend_handler = legend(Node_bar_handler,'Location','NorthEast','total date','detaT','CCA','send enable','LBT');
    
    Loop_barh_handler = barh(axes_Loop_handler,100,'EraseMode','xor','BarWidth',1,'FaceColor',[0,0.5,0.5]);
    set(axes_Loop_handler,'XLim',[0 Loop],'XTick', [],'YTick', [],'ZTick',[]);
  
    Channel_bar_position = [1:length(Channel)];
    Channel_send_queue = [ones(1,length(Channel))];
    Channel_crash_queue = [ones(1,length(Channel))];
    Channel_bar_group = [Channel_send_queue;Channel_crash_queue];
    Channel_bar_group = Channel_bar_group';
    Channel_bar_handler = bar(axes_Channel_handler,Channel_bar_position,Channel_bar_group,'EraseMode','xor','BarWidth',0.8,'Horizontal','on');
    set(axes_Channel_handler,'YDir','reverse');
    Channel_legend_handler =  legend(Channel_bar_handler,'send queue','crash queue','Location','NorthEast');
    Channel_legend_position =  get(axes_Channel_handler,'Position');
    set(Channel_legend_handler,'Position',[Channel_legend_position(1),Channel_legend_position(2)-0.1,0.1,0.05]);
end
% END OF figure
Timer_Point_Start = datestr(clock);
for i=1:Loop
    [Channel,WiFi,LTE] = Set_Packet(Channel,deta_Time,WiFi_Rate,Loop_slip,50,WiFi,LTE);
    % DFS
    [Channel,WiFi,LTE] = listen(Channel,WiFi,LTE);
    % 处理绘图和退出程序
    if View
        if mod(i,View_deta) == 0
            Parent_who = get(0,'children');
            Node = [WiFi LTE];
            if ~isempty(Parent_who)
                Display_status(Node,Node_bar_handler,i+(mod(Loop,View_deta)),...
                    Loop_barh_handler,Channel,Channel_bar_handler,axes_Channel_handler);
            else
                break;
            end
        end
    end
    if mod(i,ceil(Loop*0.1)) == 0
        disp([num2str(ceil((i/Loop)*100))  '%']);
    end
%     [WiFi,LTE] = Comopute_SNR(UE,Path_Loss,WiFi,LTE);
    [Channel,UE,WiFi,LTE] = Send_Packet(Channel,UE,WiFi,LTE);
end
Timer_Point_End = datestr(clock);

% Data form transfer


fileName = WriteStruct(1,'LTE_U',['UE'  ' Start '  Timer_Point_Start ' End ' Timer_Point_End],[WiFi LTE],...
    'LBT_enable','UE_id','packet_bit','total_date','total_input');
WriteResult(0,fileName,'',...
    'Path_Loss',Path_Loss,...
    'UE ID',[UE.id],'UE Position',[UE.point],'UE Throuput Mbit',[UE.packetlength_receiver]*10^(-6));
% WriteStruct('LTE_U',[WiFi LTE]);
end

