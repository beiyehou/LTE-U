function [ out ] = LTE_U( Loop, WiFi_num, LTE_num, Channel_num )
% LTE_U 主函数
% Loop 总的时间片数量，以 15us 为一个最小时间单位
% WiFi_num WiFi 节点的个数
% LTE_num LTE 节点的个数

% 全局变量
WiFi_Energy = 10;
LTE_Energy = 15;

% WiFi 和 LTE 结构体定义

WiFi = struct ( ...
	'point',[0,0], ...
	'distance', 0, ...
	'energy', WiFi_Energy, ...
	'id', cell(1,WiFi_num), ...
	'listen_enable', false, ...
	'send_enable', false, ...
    'packet_length', 0, ...
	'nosie', 0, ...
    'CCA',0.0,...
    'detaT',0.0, ...
	'waitQuene', [] ...
	);

LTE = struct(...
	'point', [0,0], ...
	'distance', 0, ...
	'energy', LTE_Energy, ...
	'id', cell(1,LTE_num), ...
	'listen_enable', false , ...
	'send_enable', false , ...
    'packet_length', 0, ...
	'nosie', 0 , ...
    'CCA',0.0,...
    'detaT',0.0,...
	'waitQuene', [] ... 
	);
% 定义信道结构体
Channel = struct(...
    'busy_check',false, ...
    'id', cell(1,Channel_num) ,...
    'frequency',0.0 ...
    );
% 初始化 WiFi 和 LTE 节点结构体数组
% function [Struct] = Set_Point(Struct, centerPoint ,area,start_id)
WiFi_centerPoint.x = 0.0;
WiFi_centerPoint.y = 0.0;
LTE_centerPoint.x = 100.0;
LTE_centerPoint.y = 100.0;
WiFi_area.width = 10;
WiFi_area.length = 10;
LTE_area.width = 10;
LTE_area.length = 10;

[WiFi] = Set_Point(WiFi,WiFi_centerPoint,WiFi_area,0);
[LTE] = Set_Point(LTE,LTE_centerPoint,LTE_area,0);

% function Display_Struct(Struct,startIndex,count,varargin)

% 设置业务数据包，选取监听节点
[WiFi] = Set_Packet(WiFi,2,1);
[LTE] = Set_Packet(LTE,1,1);

Display_Struct(WiFi,1,WiFi_num,'listen_enable','packet_length','waitQuene','detaT');
Display_Struct(LTE,1,LTE_num,'listen_enable','packet_length','waitQuene','detaT');

for i=1:Loop

end
end

